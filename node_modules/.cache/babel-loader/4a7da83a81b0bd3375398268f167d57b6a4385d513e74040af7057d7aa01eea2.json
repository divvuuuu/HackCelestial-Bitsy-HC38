{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My Pc\\\\Documents\\\\vs\\\\Projects\\\\StudentMISPortal\\\\studentportal\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import { BrowserRouter, Route, Routes } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// // import NewRouteComponent from './NewRouteComponent';\n// // import Option1 from './components/Option1';\n// // // import StudentLogin from './components/StudentLogin';\n// // // import AdministraterLogin from './components/AdministraterLogin';\n// // // import CollegeLogin from './components/CollegeLogin';\n\n// function MyComponent() {\n//   const navigate = useNavigate();\n\n//   const handleClick = () => {\n//     navigate('/new-route');\n//   };\n\n//   return (\n//     <button onClick={handleClick}>Navigate to New Route</button>\n//   );\n// }\n// function App() {\n//   return (\n//     <>\n//     <BrowserRouter>\n//       <Routes>\n//         <Route path=\"/\" element={<Option1/>} />\n//         {/* <Route path=\"/administrater-login\" element={<AdministraterLogin/>} />\n//         <Route path=\"/student-login\" element={<StudentLogin/>} />\n//         <Route path=\"/college-login\" element={<CollegeLogin/>} /> */}\n\n//         {/* ... other routes */}\n//       </Routes>\n//     </BrowserRouter>\n//     </>\n//   );\n// }\n\n// export default App;\nimport { useEffect } from \"react\";\nimport { Routes, Route, useNavigationType, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action, pathname]);\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/college-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/student-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/administrater-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n    if (title) {\n      document.title = title;\n    }\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector('head > meta[name=\"description\"]');\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Option1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/college-login\",\n      element: /*#__PURE__*/_jsxDEV(CollegeLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/student-login\",\n      element: /*#__PURE__*/_jsxDEV(StudentLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/administrater-login\",\n      element: /*#__PURE__*/_jsxDEV(AdministraterLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tIxn6LeLpV6gTw4imGOVhWpUIdU=\", false, function () {\n  return [useNavigationType, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Routes","Route","useNavigationType","useLocation","jsxDEV","_jsxDEV","App","_s","action","location","pathname","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content","children","path","element","Option1","fileName","_jsxFileName","lineNumber","columnNumber","CollegeLogin","StudentLogin","AdministraterLogin","_c","$RefreshReg$"],"sources":["C:/Users/My Pc/Documents/vs/Projects/StudentMISPortal/studentportal/src/App.js"],"sourcesContent":["\n// import './App.css';\n// import { BrowserRouter, Route, Routes } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// // import NewRouteComponent from './NewRouteComponent';\n// // import Option1 from './components/Option1';\n// // // import StudentLogin from './components/StudentLogin';\n// // // import AdministraterLogin from './components/AdministraterLogin';\n// // // import CollegeLogin from './components/CollegeLogin';\n\n\n\n// function MyComponent() {\n//   const navigate = useNavigate();\n\n//   const handleClick = () => {\n//     navigate('/new-route');\n//   };\n\n//   return (\n//     <button onClick={handleClick}>Navigate to New Route</button>\n//   );\n// }\n// function App() {\n//   return (\n//     <>\n//     <BrowserRouter>\n//       <Routes>\n//         <Route path=\"/\" element={<Option1/>} />\n//         {/* <Route path=\"/administrater-login\" element={<AdministraterLogin/>} />\n//         <Route path=\"/student-login\" element={<StudentLogin/>} />\n//         <Route path=\"/college-login\" element={<CollegeLogin/>} /> */}\n\n//         {/* ... other routes */}\n//       </Routes>\n//     </BrowserRouter>\n//     </>\n//   );\n// }\n\n// export default App;\nimport { useEffect } from \"react\";\nimport {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action, pathname]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/college-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/student-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/administrater-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Option1 />} />\n      <Route path=\"/college-login\" element={<CollegeLogin />} />\n      <Route path=\"/student-login\" element={<StudentLogin />} />\n      <Route path=\"/administrater-login\" element={<AdministraterLogin />} />\n    </Routes>\n  );\n}\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}