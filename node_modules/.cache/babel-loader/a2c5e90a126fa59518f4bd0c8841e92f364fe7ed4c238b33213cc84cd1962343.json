{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My Pc\\\\Documents\\\\vs\\\\Projects\\\\StudentMISPortal\\\\studentportal\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Routes, Route, useNavigationType, useLocation } from \"react-router-dom\";\nimport Option1 from \"./pages/Option1\";\n// import CollegeLogin from \"./pages/CollegeLogin\";\n// import StudentLogin from \"./pages/StudentLogin\";\n// import AdministraterLogin from \"./pages/AdministraterLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action, pathname]);\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/college-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/student-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/administrater-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n    if (title) {\n      document.title = title;\n    }\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector('head > meta[name=\"description\"]');\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Option1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/college-login\",\n      element: /*#__PURE__*/_jsxDEV(CollegeLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/student-login\",\n      element: /*#__PURE__*/_jsxDEV(StudentLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/administrater-login\",\n      element: /*#__PURE__*/_jsxDEV(AdministraterLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tIxn6LeLpV6gTw4imGOVhWpUIdU=\", false, function () {\n  return [useNavigationType, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Routes","Route","useNavigationType","useLocation","Option1","jsxDEV","_jsxDEV","App","_s","action","location","pathname","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","CollegeLogin","StudentLogin","AdministraterLogin","_c","$RefreshReg$"],"sources":["C:/Users/My Pc/Documents/vs/Projects/StudentMISPortal/studentportal/src/App.js"],"sourcesContent":["\nimport { useEffect } from \"react\";\nimport {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\";\nimport Option1 from \"./pages/Option1\";\n// import CollegeLogin from \"./pages/CollegeLogin\";\n// import StudentLogin from \"./pages/StudentLogin\";\n// import AdministraterLogin from \"./pages/AdministraterLogin\";\n\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action, pathname]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/college-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/student-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n      case \"/administrater-login\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Option1 />} />\n      <Route path=\"/college-login\" element={<CollegeLogin />} />\n      <Route path=\"/student-login\" element={<StudentLogin />} />\n      <Route path=\"/administrater-login\" element={<AdministraterLogin />} />\n    </Routes>\n  );\n}\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}